apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: postgres-pv-claim
spec:
 storageClassName: manual
 accessModes:
  - ReadWriteOnce
 resources:
  requests:
   storage: 1Gi


---

apiVersion: v1
kind: PersistentVolume
metadata:
 name: postgres-pv-volume
 labels:
  type: local
spec:
 storageClassName: manual
 capacity:
  storage: 5Gi
 accessModes:
  - ReadWriteOnce
 hostPath:
  path: "/mnt/data"

---

apiVersion: v1
kind: Secret
metadata:
 name: postgres-pwd
type: Opaque
data:
 password: cm9vdA==

---


apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: postgres
spec:
 serviceName: postgres
 replicas: 1
 selector:
  matchLabels:
   app: postgres
 template:
  metadata:
   labels:
    app: postgres
  spec:
   volumes:
    - name: postgres-pv-storage
      persistentVolumeClaim:
       claimName: postgres-pv-claim
   containers:
    - name: postgres
      image: postgres:latest
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 5432
      env:
        - name: POSTGRES_USER
          value: root
        - name: POSTGRES_PASSWORD
          valueFrom:
           secretKeyRef:
             name: postgres-pwd
             key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
      # readinessProbe:
      #   exec:
      #     command: ["pg_isready", "-U", "postgres", "-h", "127.0.0.1", "-p", "5432"]
      #   initialDelaySeconds: 35
      #   periodSeconds: 10
      # livenessProbe:
      #   exec:
      #     command: ["pg_isready", "-U", "postgres", "-h", "127.0.0.1", "-p", "5432"]
      #   initialDelaySeconds: 35
      #   periodSeconds: 10
      # resources:
      #       requests:
      #         memory: 1000Mi
      #         cpu: "250m"
      #       limits:
      #         memory: 2000Mi
      #         cpu: "500m"      
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-pv-storage

---
apiVersion: v1
kind: Service
metadata:
 name: postgres
 labels:
   app: postgres
spec:
 type: NodePort
 ports:
  - port: 5432
 selector:
  app: postgres